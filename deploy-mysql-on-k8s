# Create the directory on the host machine using the command
# $ sudo mkdir /mnt/data

# Create the PV creation yaml file
# $ vi mysql-pv.yaml
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv
  labels:
    type: local
spec:
  storageClassName: standard
  capacity:
    storage: 250Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"

# Save and exit the file

# Create the persistent volume using the command
# $ kubectl apply -f mysql-pv.yaml

# Create the PVC creation yaml file
# $ vi mysql-pv-claim.yaml
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 250Gi

# Save and exit the file

# Create the persistent volume claim using the command
# $ kubectl apply -f mysql-pv-claim.yaml

# Create the service creation yaml file
# $ vi mysql-service.yaml
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: mysql-deployment
  name: mysql
spec:
  ports:
  - port: 80
    nodePort: 30007
    protocol: TCP
    targetPort: 80
  selector:
    app: mysql-deployment
  type: NodePort
status:
  loadBalancer: {}

# Save and exit the file

# Create the service using the command
# $ kubectl apply -f mysql-service.yaml

# Create the secret creation yaml file
# $ vi mysql-root-secret.yaml
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-root-pass
type: kubernetes.io/basic-auth
stringData:
  password: YUIidhb667

# Save and exit the file

# Create the secret using the command
# $ kubectl apply -f mysql-root-secret.yaml

# Create the secret creation yaml file
# $ vi mysql-user-secret.yaml
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-user-pass
type: kubernetes.io/basic-auth
stringData:
  username: kodekloud_sam
  password: YUIidhb667

# Save and exit the file

# Create the secret using the command
# $ kubectl apply -f mysql-user-secret.yaml

# Create the secret creation yaml file
# $ vi mysql-db-secret.yaml
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-db-url
type: Opaque
stringData:
  database: kodekloud_db4

# Save and exit the file

# Create the secret using the command
# $ kubectl apply -f mysql-db-secret.yaml

# Create the deployment creation yaml file
# $ vi mysql-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: mysql-deployment
  name: mysql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-deployment
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mysql-deployment
    spec:
      containers:
      - image: mysql
        name: mysql
        resources: {}
        volumeMounts:
        - mountPath: "/var/lib/mysql"
          name: mysql-storage
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-root-pass
              key: password
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: mysql-db-url
              key: database
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: mysql-user-pass
              key: username
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-user-pass
              key: password
      volumes:
      - name: mysql-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim

status: {}

# Save and exit the file

# Create the deployment using the command
# $ kubectl apply -f mysql-deployment.yaml

# Verify the object creation using the command
# $ kubectl get pv,pvc,secret,service,deployment